name: "Build tt-metal artifacts"

on:
  workflow_call:
    inputs:
      arch:
        required: false
        type: string
        default: '["grayskull", "wormhole_b0"]'
  workflow_dispatch:

jobs:
  build-artifact:
    strategy:
      matrix:
        arch: ${{ fromJson(inputs.arch || '["grayskull", "wormhole_b0", "blackhole"]') }}
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ matrix.arch }}
      SILENT: 0
      VERBOSE: 1
      TT_METAL_DOCKER_IMAGE: ubuntu-20.04-amd64
    environment: dev
    runs-on: build
    container:
      image: ghcr.io/${{ github.repository }}/${{ matrix.arch }}:${{ github.ref_name == 'main' ? 'latest' : github.actor }}
      env: 
        TT_METAL_HOME: ${{ env.TT_METAL_HOME }}
        CONFIG: ${{ env.CONFIG }}
        ARCH_NAME: ${{ env.ARCH_NAME }}
        PYTHONPATH: ${{ env.TT_METAL_HOME }}
        SILENT: ${{ env.SILENT }}
        VERBOSE: ${{ env.VERBOSE }}
      options: >
        -v /home:/home
        -v /dev/hugepages-1G:/dev/hugepages-1G
        -v /etc/group:/etc/group:ro
        -v /etc/passwd:/etc/passwd:ro
        -v /etc/shadow:/etc/shadow:ro
        -v /mnt/MLPerf:/mnt/MLPerf
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Update submodules
        run: |
          git submodule update --init --recursive
      - name: Build tt-metal cmake build 
        run: |
          ./scripts/docker/run_docker_cmd.sh -- 
            
            cmake -B build -G Ninja -DCMAKE_CXX_COMPILER=clang++-17 \
            && cmake --build build --target tests \
            && cmake --build build --target install
      - name: 'Tar files'
        run: tar -cvf ttm_${{ matrix.arch }}.tar build/hw build/lib tt_eager/tt_lib/*.so ttnn/ttnn/*.so build/programming_examples build/test build/tools runtime
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: TTMetal_build_${{ matrix.arch }}
          path: ttm_${{ matrix.arch }}.tar
