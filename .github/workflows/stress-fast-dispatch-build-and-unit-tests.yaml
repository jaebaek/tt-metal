name: "Stress fast dispatch tests"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  build-docker-artifact:
    uses: ./.github/workflows/build-docker-artifact.yaml
    secrets: inherit

  build-artifact:
    needs: build-docker-artifact
    uses: ./.github/workflows/build-artifact.yaml
    secrets: inherit

  stress-build-and-unit-tests:
    needs: build-artifact
    timeout-minutes: 1440
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        runner-info: [
          {arch: grayskull, runs-on: ["stress-grayskull", "self-reset"], machine-type: "bare_metal", name: "E150"},
          {arch: wormhole_b0, runs-on: ["stress-wormhole_b0", "self-reset"], machine-type: "bare_metal", name: "N300"},
          # E150
          {arch: grayskull, runs-on: ["grayskull", "cloud-virtual-machine"], machine-type: "virtual_machine", name: "E150"},
          # N150
          {arch: wormhole_b0, runs-on: ["wormhole_b0", "cloud-virtual-machine", "multi-chip-num-pcie-1", "multi-chip-num-chips-1"], machine-type: "virtual_machine", name: "N150"},
          # N300
          {arch: wormhole_b0, runs-on: ["wormhole_b0", "cloud-virtual-machine", "multi-chip-num-pcie-1", "multi-chip-num-chips-2"], machine-type: "virtual_machine", name: "N300"},
        ]
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ matrix.runner-info.arch }}
      CONFIG: ci
      TT_METAL_WATCHER: 60
    environment: dev
    runs-on: ${{ matrix.runner-info.runs-on }}
    name: ${{ matrix.runner-info.machine-type }} ${{ matrix.runner-info.name }}
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
        with:
          name: TTMetal_build_${{ matrix.runner-info.arch }}
      - name: Extract files
        run: tar -xvf ttm_${{ matrix.runner-info.arch }}.tar
      - uses: ./.github/actions/install-python-deps
      - uses: ./.github/actions/load-docker-image
      - name: Run pre/post regression tests in a loop
        run: |
          ./scripts/docker/run_docker_cmd.sh \
            -e TT_METAL_WATCHER=60 -- \
            /bin/bash -c "source python_env/bin/activate \
              && ./tests/scripts/run_tests.sh --tt-arch $ARCH_NAME --pipeline-type stress_post_commit --dispatch-mode fast"
      - name: Upload watcher log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: watcher-log-${{ matrix.runner-info.arch }}-${{ matrix.runner-info.machine-type }}-${{ matrix.runner-info.name }}
          path: generated/watcher/watcher.log
